name: Create and publish a Docker image

on:
    push:
        branches: ['main']

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push-image:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v1

            # - name: Prepare
            #   id: prep
            #   run: |
            #       TAG=$(echo $GITHUB_SHA | head -c7)
            #       IMAGE="my.docker.registry/progapangist/anycable_demo"
            #       echo ::set-output name=tagged_image::${IMAGE}:${TAG}
            #       echo ::set-output name=tag::${TAG}

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@master
              with:
                  install: true

            # - name: Cache Docker layers
            #   uses: actions/cache@v2
            #   with:
            #       path: /tmp/.buildx-cache
            #       # Key is named differently to avoid collision
            #       key: ${{ runner.os }}-buildx-${{ github.sha }}
            #       restore-keys: |
            #           ${{ runner.os }}-buildx

            - name: Log in to the Container registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
                  logout: false

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
              with:
                  context: worker
                  platforms: linux/arm64
                  push: true
                  tags: latest
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
